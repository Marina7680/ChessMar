package Chess.Figure;

import Chess.ChessFigure;

public class Pawn extends ChessFigure {
    boolean isFirstStep;

    public Pawn(boolean colorIsWhite) {
        super(colorIsWhite, colorIsWhite ? '\u2659' : '\u265f');
        this.isFirstStep = true;
    }


    @Override
    public boolean canMove(int[] xy) {

        if (this.colorIsWhite==true)
            return (xy[1]==1  && xy[0]==xy[2] && xy[3]-xy[1]==2)||(xy[0]==xy[2] && xy[3]-xy[1]==1);
        else
            return  (xy[1]==6 && xy[0]==xy[2] && xy[1]-xy[3]==2)||(xy[0]==xy[2] && xy[1]-xy[3]==1);

    }
}
/*если пешка белая и у нее первый ход, то координата y должна быть равна 1,
текущая координата x должна быть равна будущей координате  x ,
а разность между будущей координатой и текущей должна быть равна 2,
так как первым ходом пешка может пройти 2 клетки.
для любого другого хода текущая координата x должна быть равна будущей координате  x ,
а разность между будущей координатой и текущей должна быть равна 1,

если пешка черная и у нее первый ход, то координата y должна быть равна 6,
текущая координата x должна быть равна будущей координате  x ,
а разность между текущей координатой и будущей должна быть равна 2,
так как первым ходом пешка может пройти 2 клетки.
для любого другого хода текущая координата x должна быть равна будущей координате  x ,
а разность между текущей координатой и будущей должна быть равна 1,
*/